{"version":3,"file":"FirebaseInvisibleRecaptcha.js","sourceRoot":"","sources":["../src/FirebaseInvisibleRecaptcha.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError } from '@unimodules/core';\nimport * as React from 'react';\nimport { StyleSheet, View, Text, Linking, TextStyle, StyleProp } from 'react-native';\n\nimport FirebaseRecaptcha from './FirebaseRecaptcha';\nimport { FirebaseAuthApplicationVerifier } from './FirebaseRecaptcha.types';\nimport FirebaseRecaptchaVerifierModal from './FirebaseRecaptchaVerifierModal';\n\ninterface Props extends Omit<React.ComponentProps<typeof FirebaseRecaptcha>, 'onVerify'> {\n  title?: string;\n  cancelLabel?: string;\n  textStyle?: StyleProp<TextStyle>;\n  linkStyle?: StyleProp<TextStyle>;\n}\n\ninterface State {\n  loaded: boolean;\n  verify: boolean;\n  resolve?: (token: string) => void;\n  reject?: (error: Error) => void;\n}\n\nexport default class FirebaseInvisibleRecaptcha extends React.Component<Props, State>\n  implements FirebaseAuthApplicationVerifier {\n  state: State = {\n    loaded: false,\n    verify: false,\n    resolve: undefined,\n    reject: undefined,\n  };\n\n  private applicationVerifier: FirebaseAuthApplicationVerifier | null = null;\n\n  get type(): string {\n    return 'recaptcha';\n  }\n\n  async verify(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.setState({\n        verify: true,\n        resolve,\n        reject,\n      });\n    });\n  }\n\n  render() {\n    const { style, textStyle, linkStyle, children, ...otherProps } = this.props;\n    const { verify, loaded } = this.state;\n    return (\n      <View style={style}>\n        {children ? (\n          children\n        ) : (\n          <Text style={[styles.text, textStyle]}>\n            This app is protected by reCAPTCHA and the Google\n            <Text\n              style={[styles.link, linkStyle]}\n              onPress={() => Linking.openURL('https://policies.google.com/privacy')}>\n              &nbsp;Privacy Policy&nbsp;\n            </Text>\n            and\n            <Text\n              style={[styles.link, linkStyle]}\n              onPress={() => Linking.openURL('https://policies.google.com/terms')}>\n              &nbsp;Terms of Service&nbsp;\n            </Text>\n            apply.\n          </Text>\n        )}\n        <FirebaseRecaptcha\n          style={styles.content}\n          {...otherProps}\n          onLoad={this.onLoad}\n          onError={this.onError}\n          onVerify={this.onVerify}\n          onFullChallenge={this.onFullChallenge}\n          invisible\n          verify={verify && loaded}\n        />\n        <FirebaseRecaptchaVerifierModal\n          ref={ref => (this.applicationVerifier = ref)}\n          {...otherProps}\n          onError={this.onError}\n        />\n      </View>\n    );\n  }\n\n  private onLoad = () => {\n    this.setState({\n      loaded: true,\n    });\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  private onError = () => {\n    const { reject } = this.state;\n    if (reject) {\n      reject(new CodedError('ERR_FIREBASE_RECAPTCHA_ERROR', 'Failed to load reCAPTCHA'));\n    }\n  };\n\n  private onFullChallenge = async () => {\n    this.setState({\n      verify: false,\n    });\n    try {\n      // @ts-ignore\n      const token = await this.applicationVerifier.verify();\n      const { resolve } = this.state;\n      if (resolve) {\n        resolve(token);\n      }\n    } catch (e) {\n      const { reject } = this.state;\n      if (reject) {\n        reject(e);\n      }\n    }\n  };\n\n  private onVerify = (token: string) => {\n    const { resolve } = this.state;\n    if (resolve) {\n      resolve(token);\n    }\n    this.setState({\n      verify: false,\n    });\n  };\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  text: {\n    fontSize: 13,\n    opacity: 0.5,\n  },\n  link: {\n    color: 'blue',\n  },\n});\n"]}